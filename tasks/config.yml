---
# role: jomrr.postgresql
# file: tasks/config.yml

# - name: "Postgresql | Check for capabilites in default config"
#   command: "cat {{ postgresql_config_path }}/postgresql.conf"
#   changed_when: false
#   register: _postgresql_default_conf

- name: "Postgresql | Configure global settings in postgresql.conf"
  ansible.builtin.lineinfile:
    dest: "{{ postgresql_config_path }}/postgresql.conf"
    regexp: "^#?{{ item.key }}.+$"
    line: "{{ item.key }} = '{{ item.value }}'"
    state: "{{ item.state | default('present') }}"
  loop: "{{ postgresql_conf }}"
  tags:
    - postgresql:config
  notify:
    - "Reload systemd"
    - "Restart postgresql"

# Tried using the postgresql_pg_hba module, but it creates strange defaults.
- name: "Postgresql | Configure hostbased authentication (pg_hba.conf)"
  ansible.builtin.template:
    src: "pg_hba.conf.j2"
    dest: "{{ postgresql_config_path }}/pg_hba.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: '0600'
  tags:
    - postgresql:config
  notify: "Restart postgresql"
  when: postgresql_hba | length > 0

- name: "Postgresql | Ensure include_dir exists if configured"
  ansible.builtin.file:
    path: "{{ postgresql_config_path }}/{{ item.value }}"
    state: directory
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: '0700'
  loop: "{{ postgresql_conf }}"
  when: item.key == 'include_dir'
  tags:
    - postgresql:config

# - name: "Postgresql | Set permissions on unix_socket_directories"
#   ansible.builtin.file:
#     path: "{{ item }}"
#     state: directory
#     owner: "{{ postgresql_user }}"
#     group: "{{ postgresql_group }}"
#     mode: "{{ postgresql_unix_socket_directories_mode }}"
#   loop: "{{ postgresql_unix_socket_directories }}"
#   tags:
#     - postgresql:config

- name: "Postgresql | Flush handlers"
  ansible.builtin.meta: flush_handlers
  tags:
    - postgresql:config
